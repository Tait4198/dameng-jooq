/*
 * This file is generated by jOOQ.
 */
package org.example.dm.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.example.dm.tables.TableTestTable;
import org.example.dm.tables.pojos.TableTest;
import org.example.dm.tables.records.TableTestRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableTestDao extends DAOImpl<TableTestRecord, TableTest, Integer> {

    /**
     * Create a new TableTestDao without any configuration
     */
    public TableTestDao() {
        super(TableTestTable.TABLE_TEST, TableTest.class);
    }

    /**
     * Create a new TableTestDao with an attached configuration
     */
    public TableTestDao(Configuration configuration) {
        super(TableTestTable.TABLE_TEST, TableTest.class, configuration);
    }

    @Override
    public Integer getId(TableTest object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TableTest> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TableTestTable.TABLE_TEST.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<TableTest> fetchById(Integer... values) {
        return fetch(TableTestTable.TABLE_TEST.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public TableTest fetchOneById(Integer value) {
        return fetchOne(TableTestTable.TABLE_TEST.ID, value);
    }

    /**
     * Fetch records that have <code>NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TableTest> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TableTestTable.TABLE_TEST.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<TableTest> fetchByName(String... values) {
        return fetch(TableTestTable.TABLE_TEST.NAME, values);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<TableTest> fetchRangeOfContent(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(TableTestTable.TABLE_TEST.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<TableTest> fetchByContent(Object... values) {
        return fetch(TableTestTable.TABLE_TEST.CONTENT, values);
    }
}
